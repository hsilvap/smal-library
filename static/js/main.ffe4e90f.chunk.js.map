{"version":3,"sources":["Navigation/Header.js","Book/Book.js","Book/NewBook.js","Book/EditBook.js","App.js","serviceWorker.js","index.js"],"names":["Header","handleClick","count","filter","setfilter","className","style","color","type","placeholder","value","onChange","e","target","onClick","Book","title","author","uid","deleteBook","editBook","NewBook","active","handleClose","addNew","useState","book","setBook","handleSubmit","close","newBook","uuidv4","classNames","aria-label","disabled","EditBook","selectedBook","handleSaveEdit","seteditBook","useEffect","Object","keys","length","App","setnewBook","setSelectedBook","books","setBooks","data","JSON","parse","localStorage","getItem","json","stringify","setItem","beginEdit","edit","find","b","handleNewBook","handleDelete","current","bk","includes","newbook","push","edited","copy","map","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ffe4e90f.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = ({handleClick,count,filter,setfilter}) => {\n  return(\n      <header className=\"App-header \">\n        <nav className=\"level container\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <p className=\"subtitle is-5\" style={{color:'white'}}>\n              <strong style={{color:'white'}}> {count}</strong> books\n            </p>\n          </div>\n          <div className=\"level-item\">\n            <div className=\"field has-addons\">\n              <p className=\"control\">\n                <input className=\"input\" type=\"text\" placeholder=\"Find a book by title\" value={filter} onChange={(e)=>{setfilter(e.target.value)}}/>\n              </p>\n              <p className=\"control\">\n                <button className=\"button\">\n                  Search\n                </button>\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"level-right\">\n          <p className=\"level-item\"><a className=\"button is-success\" onClick={handleClick}>New</a></p>\n        </div>\n      </nav>\n    </header>\n  )\n}\n\nexport default Header;","import React from 'react'\n\nconst Book = ({title, author, uid, deleteBook,editBook}) => {\n\n  return(\n  <div  className=\"column is-3\">\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <p className=\"title\">\n          {title}\n        </p>\n        <p className=\"subtitle\">\n          <i>By: </i>{author}\n        </p>\n      </div>\n      <footer className=\"card-footer\">\n        <p className=\"card-footer-item\">\n          <button className=\"button is-light\" onClick={()=>editBook(uid)}>Edit</button>\n        </p>\n        <p className=\"card-footer-item\">\n          <button className=\"button is-danger\" onClick={()=> deleteBook(uid)}>Delete</button>\n        </p>\n      </footer>\n    </div>\n  </div>\n  )\n}\n\nexport default Book","import React, {  useState } from 'react'\nimport classNames from 'classnames'\nimport { v4 as uuidv4 } from 'uuid';\n\nconst NewBook = ({active,handleClose, addNew}) => {\n  const [book, setBook] = useState({uid: '', title:'',author:''})\n\n  const handleSubmit = (close) => {\n    const newBook = {...book, uid: uuidv4()}\n    addNew(newBook)\n    setBook({uid:'', title:'',author:''})\n    if(close)\n    handleClose()\n  }\n\n  return (\n  <div className={classNames({\n    'modal': true,\n    'is-active': active,\n    })}>\n    <div className=\"modal-background\"></div>\n    <div className=\"modal-card\">\n      <header className=\"modal-card-head\">\n        <p className=\"modal-card-title\">New Book</p>\n        <button onClick={handleClose}  className=\"delete\" aria-label=\"close\"></button>\n      </header>\n      <section  className=\"modal-card-body\">\n        <form >\n        <div className=\"field\">\n          <label className=\"label\">Book Title</label>\n          <div className=\"control\">\n            <input className=\"input\" type=\"text\" value={book.title} onChange={(e)=>{ setBook({...book, title: e.target.value})}} placeholder=\"Frodo Potter\"/>\n          </div>\n          <p className=\"help\">Cannot be empty</p>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\">Author</label>\n          <div className=\"control\">\n            <input className=\"input\" type=\"email\" value={book.author} onChange={(e)=>{ setBook({...book, author: e.target.value})}} placeholder=\"John Doe\"/>\n          </div>\n          <p className=\"help\">Cannot be empty</p>\n        </div>\n      </form>\n      </section>\n      <footer className=\"modal-card-foot\">\n        <button disabled={!book.title  || !book.author } onClick={()=> handleSubmit(false)} className=\"button is-success\">Save and continue</button>\n        <button disabled={!book.title  || !book.author } onClick={()=> handleSubmit(true)} className=\"button is-success\">Save</button>\n        <button onClick={handleClose} className=\"button\">Cancel</button>\n      </footer>\n    </div>\n  </div>\n  )\n}\n\nexport default NewBook","import React, {  useState , useEffect} from 'react'\nimport classNames from 'classnames'\n\nconst EditBook = ({active,handleClose, selectedBook,handleSaveEdit}) => {\n  const [editBook, seteditBook] = useState({uid:'',author:'',title:''})\n\n  useEffect(() => {\n    if(Object.keys(selectedBook).length !== 0){\n      seteditBook({...selectedBook})\n    }\n  }, [selectedBook])\n\n  const handleSubmit = () => {\n    handleSaveEdit(editBook)\n    handleClose()\n  }\n\n  return (\n  <div className={classNames({\n    'modal': true,\n    'is-active': active,\n    })}>\n    <div className=\"modal-background\"></div>\n    <div className=\"modal-card\">\n      <header className=\"modal-card-head\">\n        <p className=\"modal-card-title\">Edit Book</p>\n        <button onClick={handleClose}  className=\"delete\" aria-label=\"close\"></button>\n      </header>\n      <section  className=\"modal-card-body\">\n        <form >\n        <div className=\"field\">\n          <label className=\"label\">Book Title</label>\n          <div className=\"control\">\n            <input className=\"input\" type=\"text\" value={editBook.title} onChange={(e)=>{ seteditBook({...editBook, title: e.target.value})}} placeholder=\"Frodo Potter\"/>\n          </div>\n          <p className=\"help\">Cannot be empty</p>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\">Author</label>\n          <div className=\"control\">\n            <input className=\"input\" type=\"email\" value={editBook.author} onChange={(e)=>{ seteditBook({...editBook, author: e.target.value})}} placeholder=\"John Doe\"/>\n          </div>\n          <p className=\"help\">Cannot be empty</p>\n        </div>\n      </form>\n      </section>\n      <footer className=\"modal-card-foot\">\n        <button disabled={!editBook.title  || !editBook.author } onClick={handleSubmit} className=\"button is-success\">Update</button>\n        <button onClick={handleClose} className=\"button\">Cancel</button>\n      </footer>\n    </div>\n  </div>\n  )\n}\n\nexport default EditBook","import React, {useState, useEffect} from 'react';\nimport 'bulma/css/bulma.css'\nimport './App.css'\nimport Header from './Navigation/Header';\nimport Book from './Book/Book';\nimport NewBook from './Book/NewBook';\nimport EditBook from './Book/EditBook';\n\nfunction App() {\n  const [newBook, setnewBook] = useState(false)\n  const [editBook, seteditBook] = useState(false)\n  const [selectedBook, setSelectedBook] = useState({})\n  const [books, setBooks] = useState([])\n  const [filter, setfilter] = useState('')\n\n  useEffect(() => {\n    var data = JSON.parse(localStorage.getItem('books'));\n    if(data){\n      setBooks(data);\n    }\n\n  }, [])\n\n  useEffect(() => {\n    var json = JSON.stringify(books)\n    localStorage.setItem('books', json)\n  }, [books])\n\n  const addBook = (newbook) =>{\n    const current = [...books]\n    current.push(newbook)\n    setBooks(current)\n  }\n  const handleEdit = (edited)=>{\n    var copy = [...books]\n    const current = copy.find(b => b.uid === edited.uid);\n    current.title= edited.title;\n    current.author= edited.author;\n    setBooks(copy)\n    seteditBook(false);\n  }\n\n  const beginEdit = (uid) =>{\n    const edit = books.find(b=>b.uid === uid)\n    setSelectedBook(edit)\n    seteditBook(true)\n  }\n\n  const handleNewBook = ()=>{\n    setnewBook(!newBook);\n  }\n\n  const handleDelete = (uid)=> {\n    const current = [...books].filter(b => b.uid !== uid);\n    setBooks(current)\n  }\n\n  return (\n    <>\n      <Header handleClick={handleNewBook} count={filter ? books.filter(bk => bk.title.includes(filter)).length : books.length} filter={filter} setfilter={setfilter}/>\n      <NewBook active={newBook} handleClose={handleNewBook} addNew={addBook}/>\n      <EditBook active={editBook} handleSaveEdit={handleEdit} selectedBook={selectedBook} handleClose={()=> seteditBook(false)} />\n      <div className=\"container is-fluid\">\n        <div className=\"columns is-multiline is-variable\" style={{'marginTop':'10px'}}>\n          {filter\n          ? books.filter(bk => bk.title.includes(filter)).map(book=> <Book key={`${book.uid}`}  editBook={beginEdit} {...book} deleteBook={handleDelete}/>)\n          : books.map(book=> <Book key={`${book.uid}`} editBook={beginEdit} deleteBook={handleDelete} {...book}/>)\n          }\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}